version: '3.7'

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - http

  web:
    image: nginx
    networks:
      - http
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    deploy:
      replicas: 2
      endpoint_mode: vip

  mockserver:
    image: node:14
    working_dir: /app
    command: node mockserver.js
    environment:
      NODE_ENV: production
      PORT: 3500
      WEBHOOK_HOST: benchmark
      WEBHOOK_PORT: 4000
      BLACKHOLE_WEBHOOK: yep
    networks:
      - http
    volumes:
      - .:/app
    deploy:
      replicas: 3
      endpoint_mode: vip

  ab:
    image: devth/alpine-bench
    command: -n 1000000 -c 800 web:3500/web/80/
    networks:
      - http
    deploy:
      replicas: 0
      restart_policy:
        condition: any

  controller:
    image: node:14
    working_dir: /app
    command: node controller.js
    ports:
      - 6550:8080
    environment:
      NODE_ENV: production
      TARGET_HOST: mockserver
      TARGET_PORT: 3500
      WEBHOOK_PORT: 4000
      DATA_DIR: /data
      BATCH_SIZE: 350
      BATCH_WINDOW: 500
    networks:
      - http
    volumes:
      - .:/app
    deploy:
      replicas: 0

  worker:
    image: node:14
    working_dir: /app
    command: node worker.js
    depends_on:
      - mockserver
      - controller
    environment:
      NODE_ENV: production
      WEBHOOK_HOST: web
      WEBHOOK_PORT: 80
    networks:
      - http
    volumes:
      - .:/app
    deploy:
      replicas: 0

networks:
  http:
    attachable: true
